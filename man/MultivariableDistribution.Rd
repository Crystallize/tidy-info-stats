% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distributionFunctions.R
\name{MultivariableDistribution}
\alias{MultivariableDistribution}
\title{Simulate a data set with multiple features}
\description{
Simulate a data set with multiple features

Simulate a data set with multiple features
}
\details{
simulating a dataset with more than one feature requires some logic sampling
}
\keyword{distributions}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{features}}{the feature names}

\item{\code{classes}}{the class names}

\item{\code{weights}}{the relative weights of each distribution}

\item{\code{dists}}{the distribution as Distribution objects}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-withConditionalDistribution}{\code{MultivariableDistribution$withConditionalDistribution()}}
\item \href{#method-withClassWeights}{\code{MultivariableDistribution$withClassWeights()}}
\item \href{#method-sample}{\code{MultivariableDistribution$sample()}}
\item \href{#method-clone}{\code{MultivariableDistribution$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-withConditionalDistribution"></a>}}
\subsection{Method \code{withConditionalDistribution()}}{
adds in a ConditionalDistribution with a class name
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MultivariableDistribution$withConditionalDistribution(
  distribution,
  featureName
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{distribution}}{the pdf as an R6 ConditionalDistribution object (ConditionalDistribution$new(fn, fnParams...))}

\item{\code{featureName}}{the class name}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-withClassWeights"></a>}}
\subsection{Method \code{withClassWeights()}}{
sets the relative weights of the different outcome classes in the simulation
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MultivariableDistribution$withClassWeights(listWeights)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{listWeights}}{the weights as a named list e.g. list(feature1 = 0.1, ...)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-sample"></a>}}
\subsection{Method \code{sample()}}{
produce a set of samples conforming to these distributions
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MultivariableDistribution$sample(n = 1000)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{n}}{the number of samples}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a data frame of samples (labelled x) associated with classes (labelled "class")
#' @description plot this distributions as pdf and cdf
#' @param xmin - the minimum of the support
#' @param xmax - the maximum of the support
#' @return a ggassemble plot object
plot = function(xmin,xmax) {
  out = self$getPdf(xmin=xmin,xmax=xmax)
  pdfPlot = ggplot(out,aes(x=x,y=pxy,ymax=CDFxy,colour=y,fill=y))+geom_line(aes(y=px),colour="grey50")+geom_line()+geom_area(alpha=0.3,position="identity")+ylab("p(x\u2229y)")+theme(legend.position = "bottom",legend.direction = "vertical")
  cdfPlot = ggplot(out,aes(x=x,y=CDFxy,colour=y))+geom_line(aes(y=CDFx),colour="grey50")+geom_line()+ylab("P(x\u2229y)")+theme(legend.position = "bottom",legend.direction = "vertical")
  return(patchwork::wrap_plots(pdfPlot,cdfPlot,nrow=1))
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MultivariableDistribution$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
